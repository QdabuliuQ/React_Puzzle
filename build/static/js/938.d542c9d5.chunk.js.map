{"version":3,"file":"static/js/938.d542c9d5.chunk.js","mappings":"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","sources":["pages/ComplexPage/components/Puzzle/Puzzle.jsx","pages/ComplexPage/ComplexPage.jsx","pages/HomePage/components/PageBg/PageBg.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\nimport PubSub from 'pubsub-js'\r\nimport { SpinLoading, Toast } from 'antd-mobile'\r\nimport { getRandomImage } from \"network/index\";\r\nimport download from \"utils/download\";\r\nimport PuzzleItem from \"components/PuzzleItem/PuzzleItem\";\r\nimport \"./Puzzle.less\"\r\n\r\nlet token1;\r\nlet token2;\r\nlet token3;\r\nlet token4;\r\nlet startx, starty;\r\nexport default class Puzzle extends Component {\r\n\r\n  state = {\r\n    randomList: [],\r\n    imageList: [],\r\n    containWidth: 0,\r\n    isLoad: true,\r\n    itemWidth: 0,\r\n    imageUrl: '',\r\n    mode: 3,\r\n    gap: 5,  // 图片间隙\r\n    moveIndex: 0,\r\n    moveLeft: 0,\r\n    moveTop: 0\r\n  }\r\n\r\n  // 获取图片url\r\n  getImageUrl = () => {\r\n    // getRandomImage().then(res => {\r\n    //   this.state.imageUrl = res.replace('https://tuapi.eees.cc', '/api1')\r\n    //   const image = new Image()\r\n    //   image.src = this.state.imageUrl\r\n    //   image.crossOrigin = '';\r\n    //   image.onload = () => {\r\n    //     let size = image.width > image.height ? image.height : image.width\r\n    //     this.computedCanvas(image, size)\r\n    //   }\r\n    // })\r\n    this.setState({\r\n      imageUrl: require('assets/images/coder.jpg')\r\n    }, () => {\r\n      const image = new Image()\r\n      image.src = this.state.imageUrl\r\n      image.crossOrigin = '';\r\n      image.onload = () => {\r\n        let size = image.width > image.height ? image.height : image.width\r\n        this.computedCanvas(image, size)\r\n      }\r\n    })\r\n  }\r\n\r\n  // 切割图片\r\n  computedCanvas = (image, size) => {\r\n    let tempList = []\r\n    let width = size / this.state.mode\r\n    let k = 1\r\n    for (let j = 0; j < this.state.mode; j++) {\r\n      for (let i = 0; i < this.state.mode; i++) {\r\n        if (i != this.state.mode - 1 || j != this.state.mode - 1) {\r\n          const canvas = document.createElement('canvas')\r\n          const ctx = canvas.getContext('2d')\r\n          canvas.width = width\r\n          canvas.height = width\r\n          canvas.style.width = '100%'\r\n          ctx.drawImage(image, i * width, j * width, width, width, 0, 0, width, width)\r\n          tempList.push({\r\n            ...this.computedAxis(k - 1, 'x', 'y'),\r\n            index: k,\r\n            base64: canvas.toDataURL(\"image/png\")\r\n          })\r\n        }\r\n        k++\r\n      }\r\n    }\r\n    this.setState({\r\n      imageList: tempList\r\n    }, () => {\r\n      this.randomList()\r\n    })\r\n  }\r\n\r\n  // 打乱数组元素\r\n  randomList = () => {\r\n    let temp = [...this.state.imageList]\r\n    temp.sort((item) => {\r\n      return Math.random() - 0.5\r\n    })\r\n    let i = this.state.mode * this.state.mode\r\n    temp.push({\r\n      ...this.computedAxis(i - 1, 'x', 'y'),\r\n      index: i,\r\n      moveIndex: i,\r\n    })\r\n    for (let i = 0; i < temp.length; i++) {\r\n      temp[i] = Object.assign(temp[i], { moveIndex: i + 1 }, this.computedAxis(i));\r\n    }\r\n    this.setState({\r\n      randomList: temp,\r\n      isLoad: false\r\n    })\r\n  }\r\n\r\n  // 计算坐标\r\n  computedAxis = (index, propertyName_x = 'left', propertyName_y = 'top') => {\r\n    let left;\r\n    let top;\r\n    if (index == 0) {\r\n      left = index % this.state.mode * this.state.itemWidth + 'px'\r\n      top = Math.floor(index / this.state.mode) * this.state.itemWidth + 'px'\r\n    } else if (index != 0 && index < this.state.mode) {\r\n      left = index % this.state.mode * this.state.itemWidth + (this.state.gap * (index % this.state.mode)) + 'px'\r\n      top = Math.floor(index / this.state.mode) * this.state.itemWidth + 'px'\r\n    } else if (index % this.state.mode == 0) {\r\n      left = index % this.state.mode * this.state.itemWidth + 'px'\r\n      top = Math.floor(index / this.state.mode) * this.state.itemWidth + (this.state.gap * Math.floor(index / this.state.mode)) + 'px'\r\n    } else {\r\n      left = index % this.state.mode * this.state.itemWidth + (this.state.gap * (index % this.state.mode)) + 'px'\r\n      top = Math.floor(index / this.state.mode) * this.state.itemWidth + (this.state.gap * Math.floor(index / this.state.mode)) + 'px'\r\n    }\r\n    return {\r\n      [propertyName_x]: left,\r\n      [propertyName_y]: top\r\n    }\r\n  }\r\n\r\n  // 移动拼图\r\n  movePuzzleItem = (targetIndex) => {\r\n    let temp = [...this.state.randomList]\r\n    for (let [index, item] of this.state.randomList.entries()) {\r\n      if (item.moveIndex == targetIndex) {\r\n        let t_left = item.left\r\n        let t_top = item.top\r\n        let m_index = item.moveIndex\r\n        temp[index].left = this.state.moveLeft\r\n        temp[index].top = this.state.moveTop\r\n        temp[index].moveIndex = this.state.moveIndex\r\n        this.setState({\r\n          randomList: temp,\r\n          moveLeft: t_left,\r\n          moveTop: t_top,\r\n          moveIndex: m_index\r\n        }, () => {\r\n          this.checkPuzzle()\r\n        })\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  touchEndEvent = (e) => {\r\n    e.preventDefault()\r\n    let mode = this.state.mode * this.state.mode\r\n    let endx, endy;\r\n    endx = e.changedTouches[0].pageX;\r\n    endy = e.changedTouches[0].pageY;\r\n    let direction = this.getDirection(startx, starty, endx, endy);\r\n    switch (direction) {\r\n      case 1:\r\n        if (this.state.moveIndex + this.state.mode <= mode) {\r\n          this.movePuzzleItem(this.state.moveIndex + this.state.mode)\r\n        }\r\n        break;\r\n      case 2:\r\n        if (this.state.moveIndex - this.state.mode >= 0) {\r\n          this.movePuzzleItem(this.state.moveIndex - this.state.mode)\r\n        }\r\n        break;\r\n      case 3:\r\n        if (this.state.moveIndex + 1 <= mode && this.state.moveIndex % this.state.mode != 0) {\r\n          this.movePuzzleItem(this.state.moveIndex + 1)\r\n        }\r\n        break;\r\n      case 4:\r\n        if (this.state.moveIndex - 1 >= 0 && this.state.moveIndex % this.state.mode != 1) {\r\n          this.movePuzzleItem(this.state.moveIndex - 1)\r\n        }\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n  touchStartEvent = (e) => {\r\n    startx = e.touches[0].pageX;\r\n    starty = e.touches[0].pageY;\r\n  }\r\n  // 检查是否完成\r\n  checkPuzzle = () => {\r\n    for (const item of this.state.randomList) {\r\n      if (item.x != item.left || item.y != item.top) {\r\n        return\r\n      }\r\n    }\r\n    PubSub.publish('success')\r\n  }\r\n  //根据起点终点返回方向 1向上 2向下 3向左 4向右 0未滑动\r\n  getDirection = (startx, starty, endx, endy) => {\r\n    let angx = endx - startx;\r\n    let angy = endy - starty;\r\n    let result = 0;\r\n\r\n    //如果滑动距离太短\r\n    if (Math.abs(angx) < 2 && Math.abs(angy) < 2) {\r\n      return result;\r\n    }\r\n\r\n    let angle = this.getAngle(angx, angy);\r\n    if (angle >= -135 && angle <= -45) {\r\n      result = 1;\r\n    } else if (angle > 45 && angle < 135) {\r\n      result = 2;\r\n    } else if ((angle >= 135 && angle <= 180) || (angle >= -180 && angle < -135)) {\r\n      result = 3;\r\n    } else if (angle >= -45 && angle <= 45) {\r\n      result = 4;\r\n    }\r\n    return result;\r\n  }\r\n  //获得角度\r\n  getAngle = (angx, angy) => {\r\n    return Math.atan2(angy, angx) * 180 / Math.PI;\r\n  };\r\n\r\n  componentDidMount() {\r\n    let width = (document.documentElement.clientWidth - 30) / this.state.mode\r\n    this.setState({\r\n      moveIndex: this.state.mode * this.state.mode,\r\n      itemWidth: width,\r\n      containWidth: width * this.state.mode + ((this.state.mode - 1) * this.state.gap)\r\n    })\r\n    this.getImageUrl()\r\n\r\n    //手指接触屏幕\r\n    document.addEventListener(\"touchstart\", this.touchStartEvent, false);\r\n    //手指离开屏幕\r\n    document.addEventListener(\"touchend\", this.touchEndEvent, false);\r\n\r\n    setTimeout(() => {\r\n      let { x, y } = this.computedAxis(this.state.mode * this.state.mode - 1, 'x', 'y')\r\n      this.setState({\r\n        moveLeft: x,\r\n        moveTop: y\r\n      })\r\n    }, 100);\r\n\r\n    // 替换图片\r\n    token1 = PubSub.subscribe('replace', () => {\r\n      this.setState({\r\n        isLoad: true\r\n      }, () => {\r\n        this.getImageUrl()\r\n      })\r\n    }) \r\n\r\n    // 保存图片\r\n    token2 = PubSub.subscribe('save', () => {\r\n      download(this.state.imageUrl, 'image')\r\n    })\r\n\r\n    // 重新排序图片\r\n    token3 = PubSub.subscribe('rank', () => {\r\n      this.setState({\r\n        isLoad: true\r\n      }, () => {\r\n        this.randomList()\r\n      })\r\n    })\r\n\r\n    // 模式切换\r\n    token4 = PubSub.subscribe('modeChange', (msg, e) => {\r\n      this.setState({\r\n        isLoad: true,\r\n        itemWidth: (this.state.containWidth - (e - 1) * this.state.gap) / e,\r\n        mode: e,\r\n        moveIndex: e * e\r\n      }, () => {\r\n        const image = new Image()\r\n        image.src = this.state.imageUrl\r\n        image.crossOrigin = '';\r\n        let {x, y} = this.computedAxis(e*e - 1, 'x', 'y')\r\n        this.setState({\r\n          moveLeft: x,\r\n          moveTop: y\r\n        })\r\n        image.onload = () => {\r\n          let size = image.width > image.height ? image.height : image.width\r\n          this.computedCanvas(image, size)\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('touchstart', this.touchStartEvent)\r\n    document.removeEventListener('touchend', this.touchEndEvent)\r\n\r\n    PubSub.unsubscribe(token1)\r\n    PubSub.unsubscribe(token2)\r\n    PubSub.unsubscribe(token3)\r\n    PubSub.unsubscribe(token4)\r\n  }\r\n\r\n  render() {\r\n    const { isLoad, randomList, containWidth, itemWidth } = this.state\r\n\r\n    return (\r\n      <div id='Puzzle'>\r\n        <div style={{ width: containWidth + 'px' }} className='puzzleContainer'>\r\n          {\r\n            isLoad && (\r\n              <div className='loadMask'>\r\n                <SpinLoading style={{ '--color': '#eaad30', '--size': '100px' }} />\r\n              </div>\r\n            )\r\n          }\r\n          {\r\n            randomList.map((value, index) => (\r\n              <PuzzleItem\r\n                i={value.index}\r\n                key={index}\r\n                image={value.base64}\r\n                size={itemWidth}\r\n                left={value.left}\r\n                top={value.top}\r\n                index={index} />\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PageBg from \"pages/HomePage/components/PageBg/PageBg\";\r\nimport Puzzle from \"./components/Puzzle/Puzzle\";\r\nimport Fireworks from \"pages/GamePage/components/Fireworks/Fireworks\";\r\nimport OpeList from \"pages/GamePage/components/OpeList/OpeList\";\r\nimport ToggleLevel from \"pages/GamePage/components/ToggleLevel/ToggleLevel\";\r\nimport Back from \"components/Back/Back\";\r\nimport \"./ComplexPage.less\"\r\n\r\nexport default class ComplexPage extends Component {\r\n  render() {\r\n    return (\r\n      <div id='ComplexPage'>\r\n        <Back />\r\n        <PageBg />\r\n        <div className='logoContainer'>\r\n          <img src={require('assets/images/logo.png')} alt=\"\" />\r\n        </div>\r\n        <Puzzle />\r\n        <div className='bottomBox'>\r\n          <OpeList />\r\n          <ToggleLevel />\r\n        </div>\r\n        <Fireworks />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport \"./PageBg.less\"\r\n\r\nexport default class PageBg extends Component {\r\n  render() {\r\n    return (\r\n      <div id='PageBg'>\r\n        <img src={require('assets/images/bg.jpg')} alt=\"\" />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"],"names":["token1","token2","token3","token4","startx","starty","Puzzle","state","randomList","imageList","containWidth","isLoad","itemWidth","imageUrl","mode","gap","moveIndex","moveLeft","moveTop","getImageUrl","setState","require","image","Image","src","crossOrigin","onload","size","width","height","computedCanvas","tempList","k","j","i","canvas","document","createElement","ctx","getContext","style","drawImage","push","computedAxis","index","base64","toDataURL","temp","sort","item","Math","random","length","Object","assign","left","top","propertyName_x","propertyName_y","floor","movePuzzleItem","targetIndex","entries","t_left","t_top","m_index","checkPuzzle","touchEndEvent","e","preventDefault","endx","endy","changedTouches","pageX","pageY","getDirection","touchStartEvent","touches","x","y","PubSub","angx","angy","result","abs","angle","getAngle","atan2","PI","documentElement","clientWidth","this","addEventListener","setTimeout","download","msg","removeEventListener","id","className","map","value","PuzzleItem","Component","ComplexPage","Back","PageBg","alt","OpeList","ToggleLevel","Fireworks"],"sourceRoot":""}